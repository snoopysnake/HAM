{"version":3,"sources":["Header.js","Pixi.js","ProgressBar.js","Statistics.js","Vehicle.js","Item.js","StoreCatalog.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Math","round","this","props","currency","parseFloat","speed","toFixed","distance","React","Component","Pixi","resize","parent","app","view","parentNode","renderer","clientWidth","clientHeight","updatePixiContainer","element","pixiContainer","children","length","appendChild","PIXI","autoResize","resolution","devicePixelRatio","window","addEventListener","removeEventListener","ref","ProgressBar","Progress","percent","style","width","maxSpeed","Statistics","second","floor","time","secStr","minute","minStr","hour","hrStr","name","value","currentVehicle","minSpeed","Stat","Vehicle","Item","purchaseItem","bind","item","path","replace","onClick","src","alt","cost","storeCatalog","func","console","log","Store","switchTab","state","activeTab","e","setState","target","innerText","id","display","Tab","Catalog","catalogItems","map","key","catalogRows","i","push","title","atMaxSpeed","App","speedUp","purchaseStoreItem","titleTimer","setInterval","shiftTitle","tickTimer","tick","clearInterval","substring","charAt","document","newSpeed","max","newDistance","newTime","newCurrency","storeItem","alert","clearTimeout","topSpeedTimer","setTimeout","min","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.427e7df0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.Component{\r\n  render() {\r\n    return (\r\n      <div className=\"component-header\">\r\n        <div className=\"top\">\r\n          <h1>{ Math.round(this.props.currency) } credits</h1>\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <h1>{ parseFloat(Math.round(this.props.speed * 100)/100).toFixed(2) } MPH</h1>\r\n          <h1>{ parseFloat(Math.round(this.props.distance * 100)/100).toFixed(2) } miles</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as PIXI from 'pixi.js'\r\nimport './Pixi.css';\r\n\r\nexport default class Pixi extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pixiContainer = null;\r\n    this.app = new PIXI.Application({\r\n      autoResize: true,\r\n      resolution: devicePixelRatio\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.resize);\r\n    this.resize();\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resize);\r\n  }\r\n  resize = () => {\r\n    const parent = this.app.view.parentNode;\r\n    this.app.renderer.resize(parent.clientWidth, parent.clientHeight);\r\n  }\r\n  updatePixiContainer = element => {\r\n    this.pixiContainer = element;\r\n    if (this.pixiContainer && this.pixiContainer.children.length <= 0) {\r\n      this.pixiContainer.appendChild(this.app.view);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"component-pixi\" ref={this.updatePixiContainer} />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nexport default class ProgressBar extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"component-progress-bar\">\r\n        <Progress percent={this.props.percent}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Progress(props) {\r\n  return <div className=\"progress\" style={{ width: `${props.percent}%` }}/>\r\n}","import React from 'react';\r\nimport './Statistics.css';\r\n\r\nvar maxSpeed = 0;\r\n\r\nexport default class Statistics extends React.Component {\r\n  render() {\r\n    const second = Math.floor(this.props.time) % 60;\r\n    const secStr = second === 1 ? second + ' second' : second + ' seconds'\r\n    const minute = Math.floor(this.props.time / 60 % 60);\r\n    const minStr = minute === 0 ? '' : minute === 1 ? minute + ' minute' : minute + ' minutes'\r\n    const hour = Math.floor(this.props.time / 60 / 60);\r\n    const hrStr = hour === 0 ? '' : hour === 1 ? hour + ' hour' : hour + ' hours'\r\n    return (\r\n      <div className=\"component-statistics\">\r\n        <h1>Stats</h1>\r\n        <Stat name=\"Time Elapsed\" value={ `${hrStr} ${minStr} ${secStr}` } />\r\n        <Stat name=\"Current Vehicle\" value={ this.props.currentVehicle.name } />\r\n        <Stat name=\"Vehicle Min Speed\" value={ this.props.currentVehicle.minSpeed + ' MPH' } />\r\n        <Stat name=\"Vehicle Max Speed\" value={ this.props.currentVehicle.maxSpeed + ' MPH' } />\r\n        <Stat name=\"Top Speed\" value={ this.props.speed > maxSpeed ? (maxSpeed = parseFloat(this.props.speed).toFixed(2)) : maxSpeed + ' MPH' } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Stat extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-stat\">\r\n        <div className=\"label\">{ this.props.name }:</div>\r\n        <div className=\"value\">{ this.props.value }</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Vehicle.css';\r\n\r\nexport default class Vehicle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-vehicle\">\r\n      \t{this.props.currentVehicle.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Item.css'\r\n\r\nexport default class Item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.purchaseItem = this.purchaseItem.bind(this);\r\n  }\r\n  purchaseItem() {\r\n    this.props.purchaseItem(this.props.item);\r\n  }\r\n  render() {\r\n  \tconst path = `./assets/${ this.props.item.name.replace(' ','_') }.png`;\r\n    return (\r\n      <div className=\"component-item\" onClick={ this.purchaseItem }>\r\n      \t<img src={ path } alt={ this.props.item.name } />\r\n      \t<div className=\"item-cost\">{ this.props.item.cost }</div>\r\n        <div className=\"item-name\">{ this.props.item.name }</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export var storeCatalog = {\r\n  'Vehicles':\r\n    [\r\n      {\r\n          name: 'Dirt Bike',\r\n          cost: 10,\r\n          minSpeed: 10,\r\n          maxSpeed: 35,\r\n          func: () => { console.log('This is a bicycle.') },\r\n      },\r\n      {\r\n          name: 'Race Bike',\r\n          cost: 20,\r\n          minSpeed: 25,\r\n          maxSpeed: 50,\r\n          func: () => { console.log('This is a motorcycle.') },\r\n      },\r\n      {\r\n          name: 'Vehicle 3',\r\n          cost: 40,\r\n          minSpeed: 50,\r\n          maxSpeed: 100,\r\n      },\r\n      {\r\n          name: 'Vehicle 4',\r\n          cost: 80,\r\n          minSpeed: 100,\r\n          maxSpeed: 250,\r\n      },\r\n    ],\r\n  'Upgrades':\r\n    [\r\n      {\r\n          name: 'Upgrade 1',\r\n      }\r\n    ],\r\n  'Achievements':\r\n    [\r\n      {\r\n          name: 'Achievement 1',\r\n      }\r\n    ],\r\n};\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport { storeCatalog } from './StoreCatalog'\r\nimport './Store.css';\r\n\r\nexport default class Store extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.switchTab = this.switchTab.bind(this);\r\n    this.state = {\r\n      activeTab: 'Vehicles'\r\n    }\r\n  }\r\n  switchTab(e) {\r\n    this.setState({\r\n      activeTab: e.target.innerText\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"component-store\">\r\n        <div className=\"tab-nav\">\r\n          <Tab id=\"Vehicles\" display={ this.switchTab } />\r\n          <Tab id=\"Upgrades\" display={ this.switchTab } />\r\n          <Tab id=\"Achievements\" display={ this.switchTab } />\r\n        </div>\r\n        <Catalog\r\n          activeTab={ this.state.activeTab }\r\n          purchaseItem = { this.props.purchaseItem }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Tab extends React.Component {\r\n  render() {\r\n    return (\r\n      <button className=\"component-tab\" onClick={ this.props.display }>\r\n        { this.props.id }\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nclass Catalog extends React.Component {\r\n  render() {\r\n    const catalogItems = storeCatalog[this.props.activeTab].map((item) => {\r\n      return <Item  key={ item.name } item={ item } purchaseItem={ this.props.purchaseItem } />\r\n    });\r\n    const catalogRows = [];\r\n    for (let i = 0; i < catalogItems.length; i+=3) {\r\n      catalogRows.push(\r\n        <div key={`row-${i}`} className=\"row\">\r\n          { catalogItems[i] }\r\n          { catalogItems[i + 1] }\r\n          { catalogItems[i + 2] }\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"component-catalog\">\r\n      {\r\n        catalogRows\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Pixi from './Pixi';\r\nimport ProgressBar from './ProgressBar';\r\nimport Statistics from './Statistics';\r\nimport Vehicle from './Vehicle';\r\nimport Store from './Store';\r\n\r\nconst ticksPerSecond = 60;\r\nconst milesToMph = 0.000277778;\r\nconst multiplier = 100;\r\n\r\nvar title = '【﻿ＨＡＭ】ＶａｐｏｒＤｒｉｖｅ​​';\r\nvar atMaxSpeed = false;\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.speedUp = this.speedUp.bind(this);\r\n    this.purchaseStoreItem = this.purchaseStoreItem.bind(this);\r\n    this.state = {\r\n      currentVehicle: {\r\n        name: 'Bicycle',\r\n        minSpeed: 8,\r\n        maxSpeed: 20\r\n      },\r\n      speed: 0,\r\n      distance: 0,\r\n      time: 0,\r\n      currency: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.titleTimer = setInterval (\r\n      () => this.shiftTitle(),\r\n      666\r\n    );\r\n    this.tickTimer = setInterval(\r\n      () => this.tick(),\r\n      1000 / ticksPerSecond\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.tickTimer);\r\n  }\r\n  shiftTitle() {\r\n    // console.log(title);\r\n    title = title.substring(1, title.length) + title.charAt(0);\r\n    document.title = title;\r\n  }\r\n  tick() {\r\n    // Speed decay\r\n    let newSpeed;\r\n    if (atMaxSpeed)\r\n      newSpeed = this.state.currentVehicle.maxSpeed;\r\n    else newSpeed = Math.max(this.state.currentVehicle.minSpeed, this.state.speed - (1 / ticksPerSecond));\r\n    // Distance traveled\r\n    let newDistance = this.state.distance + ((this.state.speed * milesToMph) / ticksPerSecond);\r\n    let newTime = this.state.time + (1 / ticksPerSecond);\r\n    let newCurrency = this.state.currency + (this.state.speed * milesToMph) / ticksPerSecond * multiplier;\r\n    this.setState({\r\n      speed: newSpeed,\r\n      distance: newDistance,\r\n      time: newTime,\r\n      currency: newCurrency\r\n    });\r\n  }\r\n  purchaseStoreItem(storeItem){\r\n    // Must check type of item purchased (can be either vehicle or upgrade)\r\n    // TODO: make item unavailable (purchased) in store\r\n    if (this.state.currency >= storeItem.cost){\r\n      alert(storeItem.name + ' purchased!');\r\n      this.setState({\r\n        currentVehicle: storeItem,\r\n        currency: (this.state.currency - storeItem.cost)\r\n      })\r\n    } else {\r\n      alert(`Not enough credits for ${storeItem.name}!`);\r\n    }\r\n  }\r\n  speedUp() {\r\n    if (this.state.speed + 1 >= this.state.currentVehicle.maxSpeed) {\r\n      // Resets max speed timer\r\n      atMaxSpeed = true;\r\n      clearTimeout(this.topSpeedTimer);\r\n      this.topSpeedTimer = setTimeout(\r\n        () => {\r\n          atMaxSpeed = false;\r\n        },\r\n        200\r\n      );\r\n    }\r\n    this.setState({\r\n      // Add one mph\r\n      speed: Math.min(this.state.currentVehicle.maxSpeed, this.state.speed + 1)\r\n\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"component-app\">\r\n        <div className=\"view\" onClick={ this.speedUp }>\r\n          <Header\r\n            speed = { this.state.speed }\r\n            distance = { this.state.distance }\r\n            currency = { this.state.currency }\r\n          />\r\n          <Pixi />\r\n        </div>\r\n        <ProgressBar percent={ (this.state.distance - Math.floor(this.state.distance)) * 100 } />\r\n        <div className=\"menu\">\r\n          <Statistics\r\n            currentVehicle = { this.state.currentVehicle }\r\n            speed = { this.state.speed }\r\n            distance = { this.state.distance }\r\n            time = { this.state.time }\r\n          />\r\n          <Vehicle\r\n            currentVehicle = { this.state.currentVehicle }\r\n          />\r\n          <Store\r\n            distance = { this.state.distance }\r\n            currency = { this.state.currency }\r\n            purchaseItem = { this.purchaseStoreItem }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}